<UserControl x:Class="WpfTaskManagerApp.Views.AddEditUserDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfTaskManagerApp.Views"
             xmlns:viewModels="clr-namespace:WpfTaskManagerApp.ViewModels"
             xmlns:converters="clr-namespace:WpfTaskManagerApp.Converters"
             xmlns:helpers="clr-namespace:WpfTaskManagerApp.Helpers"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=viewModels:AddEditUserViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="550" d:DesignWidth="450"
             Background="White">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
            </ResourceDictionary.MergedDictionaries>

            <ControlTemplate x:Key="ValidationErrorTemplate">
                <StackPanel>
                    <AdornedElementPlaceholder x:Name="controlWithError"/>
                    <TextBlock Text="{Binding ElementName=controlWithError, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" 
                               Foreground="#E53935" FontSize="11" Margin="0,2,0,0"/>
                </StackPanel>
            </ControlTemplate>

            <Style TargetType="TextBlock" x:Key="DialogLabelStyle">
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Margin" Value="0,0,0,6"/>
                <Setter Property="Foreground" Value="#4B5563"/>
                <Setter Property="FontWeight" Value="Medium"/>
            </Style>

            <Style TargetType="TextBox" x:Key="DialogInputTextBoxStyle">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="10,8"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#D1D5DB"/>
                <Setter Property="Margin" Value="0,0,0,8"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="Height" Value="38"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border x:Name="border" Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#A0AEC0"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#3B82F6"/>
                                    <Setter TargetName="border" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect ShadowDepth="0" Color="#3B82F6" Opacity="0.2" BlurRadius="4"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#EF4444"/>
                                    <Setter TargetName="border" Property="BorderThickness" Value="1.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="PasswordBox" x:Key="DialogInputPasswordBoxStyle">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="10,8"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#D1D5DB"/>
                <Setter Property="Margin" Value="0,0,0,8"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="Height" Value="38"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="PasswordBox">
                            <Border x:Name="border" Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#A0AEC0"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#3B82F6"/>
                                    <Setter TargetName="border" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect ShadowDepth="0" Color="#3B82F6" Opacity="0.2" BlurRadius="4"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#EF4444"/>
                                    <Setter TargetName="border" Property="BorderThickness" Value="1.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="CheckBox" x:Key="DialogCheckBoxStyle">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Foreground" Value="#334155"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0,5,0,15"/>
            </Style>

            <Style TargetType="Button" x:Key="DialogPrimaryButtonStyle">
                <Setter Property="Background" Value="#3B82F6"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Padding" Value="20,10"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="MinWidth" Value="100"/>
                <Setter Property="Height" Value="38"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="4">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="1" Color="#2563EB" Opacity="0.3" BlurRadius="5"/>
                                </Border.Effect>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#2563EB"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Opacity" Value="0.65"/>
                                    <Setter TargetName="border" Property="Background" Value="#9CA3AF"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="DialogSecondaryButtonStyle" BasedOn="{StaticResource DialogPrimaryButtonStyle}">
                <Setter Property="Background" Value="#E5E7EB"/>
                <Setter Property="Foreground" Value="#374151"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#D1D5DB"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Border Padding="25" Background="#F9FAFB">
        <StackPanel>
            <TextBlock Text="{Binding WindowTitle}" FontSize="22" FontWeight="Bold" Foreground="#1F2937" Margin="0,0,0,20"/>

            <TextBlock Text="Username:" Style="{StaticResource DialogLabelStyle}"/>
            <TextBox Text="{Binding Username, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" 
                     Style="{StaticResource DialogInputTextBoxStyle}"
                     Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                     Margin="0,0,0,15"/>

            <TextBlock Text="Full Name:" Style="{StaticResource DialogLabelStyle}"/>
            <TextBox Text="{Binding FullName, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" 
                     Style="{StaticResource DialogInputTextBoxStyle}"
                     Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                     Margin="0,0,0,15"/>

            <TextBlock Text="Email:" Style="{StaticResource DialogLabelStyle}"/>
            <TextBox Text="{Binding Email, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" 
                     Style="{StaticResource DialogInputTextBoxStyle}"
                     Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                     Margin="0,0,0,15"/>

            <TextBlock Text="Address:" Style="{StaticResource DialogLabelStyle}"/>
            <TextBox Text="{Binding Address, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True, TargetNullValue=''}" 
                     Style="{StaticResource DialogInputTextBoxStyle}" AcceptsReturn="True" TextWrapping="Wrap" MinHeight="60" Height="Auto"
                     Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                     Margin="0,0,0,15"/>

            <StackPanel Visibility="{Binding IsPasswordSectionVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Text="Password:" Style="{StaticResource DialogLabelStyle}"/>
                <PasswordBox Style="{StaticResource DialogInputPasswordBoxStyle}"
                             helpers:PasswordHelper.Password="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"
                             helpers:PasswordHelper.AttachBehavior="True"
                             Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                             Margin="0,0,0,15"/>
            </StackPanel>

            <CheckBox Content="Is Active" IsChecked="{Binding IsActive}" Style="{StaticResource DialogCheckBoxStyle}"/>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,20,0,0">
                <Button Content="Cancel" Command="{Binding CancelCommand}" Style="{StaticResource DialogSecondaryButtonStyle}" Margin="0,0,10,0"/>
                <Button Content="Save" Command="{Binding SaveCommand}" Style="{StaticResource DialogPrimaryButtonStyle}"/>
            </StackPanel>
        </StackPanel>
    </Border>
</UserControl>
