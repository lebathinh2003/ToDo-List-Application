<UserControl x:Class="WpfTaskManagerApp.Views.ProfileView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfTaskManagerApp.Views"
             xmlns:viewModels="clr-namespace:WpfTaskManagerApp.ViewModels"
             xmlns:converters="clr-namespace:WpfTaskManagerApp.Converters"
             xmlns:helpers="clr-namespace:WpfTaskManagerApp.Helpers"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=viewModels:ProfileViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="700" d:DesignWidth="1100" Background="#F7F7F7">

    <UserControl.Resources>
        <ResourceDictionary>
            <!-- Gradient Brush for Banner -->
            <LinearGradientBrush x:Key="BannerGradient" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#2B6CB0" Offset="0"/>
                <GradientStop Color="#4299E1" Offset="1"/>
            </LinearGradientBrush>

            <ControlTemplate x:Key="ValidationErrorTemplate">
                <StackPanel>
                    <AdornedElementPlaceholder x:Name="textBox"/>
                    <TextBlock Text="{Binding ElementName=textBox, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" 
                               Foreground="Red" FontSize="11" Margin="0,2,0,2"
                               Visibility="{Binding ElementName=textBox, Path=AdornedElement.(Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </StackPanel>
            </ControlTemplate>

            <!-- Giữ nguyên tất cả các style gốc -->
            <Style TargetType="GroupBox">
                <Setter Property="Padding" Value="20"/>
                <Setter Property="Margin" Value="0,0,0,20"/>
                <Setter Property="BorderBrush" Value="#E0E0E0"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GroupBox">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="8"
                                    SnapsToDevicePixels="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Border Grid.Row="0" 
                                            BorderBrush="{TemplateBinding BorderBrush}" 
                                            BorderThickness="0,0,0,1" 
                                            Padding="15,10" 
                                            Background="#F0F2F5" 
                                            CornerRadius="8,8,0,0">
                                        <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          TextBlock.FontWeight="SemiBold" TextBlock.FontSize="16" TextBlock.Foreground="#2B6CB0"/>
                                    </Border>
                                    <ContentPresenter Grid.Row="1" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="TextBlock" x:Key="LabelStyle">
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Margin" Value="0,0,0,6"/>
                <Setter Property="Foreground" Value="#4A5568"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Style>

            <Style TargetType="TextBlock" x:Key="ReadOnlyValueStyle">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Margin" Value="0,0,0,15"/>
                <Setter Property="Foreground" Value="#2D3748"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="Padding" Value="10,8"/>
                <Setter Property="Background" Value="#EDF2F7"/>
                <Setter Property="MinWidth" Value="250"/>
                <Setter Property="Height" Value="38"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="TextWrapping" Value="NoWrap"/>
                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            </Style>

            <Style TargetType="TextBox" x:Key="InputTextBoxStyle">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="10,7"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#CBD5E0"/>
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="MinWidth" Value="250"/>
                <Setter Property="Height" Value="38"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border x:Name="border" Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#A0AEC0"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#4299E1"/>
                                    <Setter TargetName="border" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect ShadowDepth="0" Color="#4299E1" Opacity="0.2" BlurRadius="4"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="Red"/>
                                    <Setter TargetName="border" Property="BorderThickness" Value="1.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="PasswordBox" x:Key="InputPasswordBoxStyle">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="10,7"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#CBD5E0"/>
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="MinWidth" Value="250"/>
                <Setter Property="Height" Value="38"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="PasswordBox">
                            <Border x:Name="border" Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#A0AEC0"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#4299E1"/>
                                    <Setter TargetName="border" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect ShadowDepth="0" Color="#4299E1" Opacity="0.2" BlurRadius="4"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="Red"/>
                                    <Setter TargetName="border" Property="BorderThickness" Value="1.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="PrimaryButtonStyle">
                <Setter Property="Background" Value="#3182CE"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Padding" Value="20,0"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="MinWidth" Value="140"/>
                <Setter Property="Height" Value="38"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#2B6CB0"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Opacity" Value="0.6"/>
                                    <Setter TargetName="border" Property="Background" Value="#A0AEC0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="SecondaryButtonStyle" BasedOn="{StaticResource PrimaryButtonStyle}">
                <Setter Property="Background" Value="#718096"/>
                <Setter Property="Foreground" Value="White"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#4A5568"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="#CBD5E0"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="TextBlock" x:Key="MessageTextStyle">
                <Setter Property="Margin" Value="0,15,0,5"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="FontSize" Value="13"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Padding="20">
        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Top" Margin="10">
            <!-- Banner Section -->
            <Border Background="{StaticResource BannerGradient}" 
                    CornerRadius="8" 
                    Margin="0,0,0,25"
                    Padding="30,25"
                    Height="100">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- User Avatar -->
                    <Border Grid.Column="0" 
                            Width="50" 
                            Height="50" 
                            CornerRadius="40"
                            Background="{StaticResource BannerGradient}"
                            BorderBrush="White"
                            BorderThickness="2"
                            VerticalAlignment="Center">
                        <Viewbox>
                            <Path Data="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z" 
                                  Fill="White" Stretch="Uniform"/>
                        </Viewbox>
                    </Border>

                    <!-- User Info -->
                    <StackPanel Grid.Column="1" 
                                Margin="20,0,0,0"
                                VerticalAlignment="Center">
                        <TextBlock Text="{Binding FullName}" 
                                   Foreground="White"
                                   FontSize="24"
                                   FontWeight="Bold"
                                   Margin="0,0,0,5"/>
                        <TextBlock Text="Welcome to your profile"
                                   Foreground="#EBF8FF"
                                   FontSize="16"
                                   FontWeight="Medium"/>
                    </StackPanel>

                    
                </Grid>
            </Border>

            <!-- Original Content -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Account Information Section -->
                <GroupBox Grid.Column="0" Header="Account Information" VerticalAlignment="Top">
                    <StackPanel>
                        <TextBlock Text="Username" Style="{StaticResource LabelStyle}"/>
                        <TextBlock Text="{Binding Username}" Style="{StaticResource ReadOnlyValueStyle}" Margin="0,0,0,15"/>

                        <TextBlock Text="Full Name" Style="{StaticResource LabelStyle}"/>
                        <TextBox Text="{Binding FullName, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" 
                                 Style="{StaticResource InputTextBoxStyle}"
                                 Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                                 Margin="0,0,0,15"/>

                        <TextBlock Text="Email" Style="{StaticResource LabelStyle}"/>
                        <TextBox Text="{Binding Email, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" 
                                 Style="{StaticResource InputTextBoxStyle}"
                                 Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                                 Margin="0,0,0,15"/>

                        <TextBlock Text="Address" Style="{StaticResource LabelStyle}"/>
                        <TextBox Text="{Binding Address, UpdateSourceTrigger=PropertyChanged, TargetNullValue='', ValidatesOnNotifyDataErrors=True}" 
                                 Style="{StaticResource InputTextBoxStyle}" AcceptsReturn="True" TextWrapping="Wrap" MinHeight="70" Height="Auto"
                                 Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                                 Margin="0,0,0,15"/>

                        <Button Content="Update Profile" 
                                Command="{Binding UpdateProfileCommand}" 
                                Style="{StaticResource PrimaryButtonStyle}" 
                                HorizontalAlignment="Left" Margin="0,10,0,0"/>
                    </StackPanel>
                </GroupBox>

                <!-- Security Section -->
                <GroupBox Grid.Column="2" Header="Security" VerticalAlignment="Top">
                    <StackPanel>
                        <Button Content="{Binding IsPasswordChangeVisible, Converter={StaticResource BooleanToStringConverter}, ConverterParameter='Hide Password Section|Change Password'}" 
                                Command="{Binding ShowChangePasswordCommand}" 
                                Style="{StaticResource SecondaryButtonStyle}" 
                                HorizontalAlignment="Left" Margin="0,0,0,20" MinWidth="190"/>

                        <Border Background="#FFFFFF" CornerRadius="5" Padding="20" 
                                BorderThickness="1" BorderBrush="#E2E8F0"
                                Visibility="{Binding IsPasswordChangeVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                                Margin="0,0,0,0">
                            <StackPanel>
                                <TextBlock Text="Current Password:" Style="{StaticResource LabelStyle}"/>
                                <PasswordBox Style="{StaticResource InputPasswordBoxStyle}"
                                             helpers:PasswordHelper.Password="{Binding CurrentPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"
                                             helpers:PasswordHelper.AttachBehavior="True"
                                             Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                                             Margin="0,0,0,15"/>

                                <TextBlock Text="New Password:" Style="{StaticResource LabelStyle}"/>
                                <PasswordBox Style="{StaticResource InputPasswordBoxStyle}"
                                             helpers:PasswordHelper.Password="{Binding NewPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"
                                             helpers:PasswordHelper.AttachBehavior="True"
                                             Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                                             Margin="0,0,0,15"/>

                                <TextBlock Text="Confirm New Password:" Style="{StaticResource LabelStyle}"/>
                                <PasswordBox Style="{StaticResource InputPasswordBoxStyle}"
                                             helpers:PasswordHelper.Password="{Binding ConfirmNewPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"
                                             helpers:PasswordHelper.AttachBehavior="True"
                                             Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                                             Margin="0,0,0,20"/>

                                <Button Content="Save New Password" 
                                        Command="{Binding ChangePasswordCommand}" 
                                        Style="{StaticResource PrimaryButtonStyle}" 
                                        HorizontalAlignment="Left" Margin="0,10,0,0"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </GroupBox>
            </Grid>

            <!-- Message and Progress Bars -->
            <TextBlock Text="{Binding MessageFromToast, FallbackValue=''}" 
                       Style="{StaticResource MessageTextStyle}"
                       Foreground="{Binding MessageFromToast, Converter={StaticResource MessageToBrushConverter}, FallbackValue=Red}"
                       Visibility="{Binding MessageFromToast, Converter={StaticResource StringToVisibilityConverter}, FallbackValue=Collapsed}"
                       Margin="0,20,0,5"/>

            <ProgressBar IsIndeterminate="True" Height="3" Margin="0,5,0,0" BorderThickness="0"
                         Visibility="{Binding IsUpdatingProfile, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/>

            <ProgressBar IsIndeterminate="True" Height="3" Margin="0,5,0,0" BorderThickness="0"
                         Visibility="{Binding IsChangingPassword, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/>

        </StackPanel>
    </ScrollViewer>
</UserControl>