<UserControl x:Class="WpfTaskManagerApp.Views.ProfileView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfTaskManagerApp.Views"
             xmlns:viewModels="clr-namespace:WpfTaskManagerApp.ViewModels"
             xmlns:converters="clr-namespace:WpfTaskManagerApp.Converters"
             xmlns:helpers="clr-namespace:WpfTaskManagerApp.Helpers"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=viewModels:ProfileViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="700" d:DesignWidth="800"
             Background="#F7F7F7">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="GroupBox">
                <Setter Property="Padding" Value="20"/>
                <Setter Property="Margin" Value="0,0,0,25"/>
                <Setter Property="BorderBrush" Value="#E0E0E0"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GroupBox">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="8"
                                    SnapsToDevicePixels="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Border Grid.Row="0" 
                                            BorderBrush="{TemplateBinding BorderBrush}" 
                                            BorderThickness="0,0,0,1" 
                                            Padding="15,10" 
                                            Background="#F0F2F5" 
                                            CornerRadius="8,8,0,0">
                                        <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                    <ContentPresenter Grid.Row="1" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="TextBlock" x:Key="LabelStyle">
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Margin" Value="0,0,0,6"/>
                <Setter Property="Foreground" Value="#4A5568"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Style>

            <Style TargetType="TextBlock" x:Key="ReadOnlyValueStyle">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Margin" Value="0,0,0,15"/>
                <Setter Property="Foreground" Value="#2D3748"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="Padding" Value="10,8"/>
                <Setter Property="Background" Value="#EDF2F7"/>
                <Setter Property="MinWidth" Value="250"/>
                <Setter Property="Height" Value="38"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="TextWrapping" Value="NoWrap"/>
                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            </Style>

            <Style TargetType="TextBox" x:Key="InputTextBoxStyle">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="10,7"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#CBD5E0"/>
                <Setter Property="Margin" Value="0,0,0,15"/>
                <Setter Property="MinWidth" Value="250"/>
                <Setter Property="Height" Value="38"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border x:Name="border" Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#A0AEC0"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#4299E1"/>
                                    <Setter TargetName="border" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect ShadowDepth="0" Color="#4299E1" Opacity="0.2" BlurRadius="4"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="PasswordBox" x:Key="InputPasswordBoxStyle">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="10,7"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#CBD5E0"/>
                <Setter Property="Margin" Value="0,0,0,15"/>
                <Setter Property="MinWidth" Value="250"/>
                <Setter Property="Height" Value="38"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="PasswordBox">
                            <Border x:Name="border" Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#A0AEC0"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#4299E1"/>
                                    <Setter TargetName="border" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect ShadowDepth="0" Color="#4299E1" Opacity="0.2" BlurRadius="4"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="Button" x:Key="PrimaryButtonStyle">
                <Setter Property="Background" Value="#3182CE"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Padding" Value="20,0"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="MinWidth" Value="140"/>
                <Setter Property="Height" Value="38"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#2B6CB0"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Opacity" Value="0.6"/>
                                    <Setter TargetName="border" Property="Background" Value="#A0AEC0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="SecondaryButtonStyle" BasedOn="{StaticResource PrimaryButtonStyle}">
                <Setter Property="Background" Value="#718096"/>
                <Setter Property="Foreground" Value="White"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#4A5568"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="#CBD5E0"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="TextBlock" x:Key="MessageTextStyle">
                <Setter Property="Margin" Value="0,15,0,5"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="FontSize" Value="13"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Padding="10">
        <StackPanel MaxWidth="700" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="20">
            <TextBlock Text="My Profile" FontSize="28" FontWeight="Bold" HorizontalAlignment="Left" Margin="0,0,0,25" Foreground="#1A202C"/>

            <GroupBox Header="Account Information" FontWeight="Medium" FontSize="16" Foreground="#2B6CB0">
                <StackPanel>
                    <TextBlock Text="Username" Style="{StaticResource LabelStyle}"/>
                    <TextBlock Text="{Binding Username}" Style="{StaticResource ReadOnlyValueStyle}" Margin="0,0,0,15"/>
                    <TextBlock Text="Full Name" Style="{StaticResource LabelStyle}"/>
                    <TextBox Text="{Binding FullName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource InputTextBoxStyle}"/>

                    <TextBlock Text="Email" Style="{StaticResource LabelStyle}"/>
                    <TextBox Text="{Binding Email, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource InputTextBoxStyle}"/>

                    <TextBlock Text="Address" Style="{StaticResource LabelStyle}"/>
                    <TextBox Text="{Binding Address, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}" Style="{StaticResource InputTextBoxStyle}" AcceptsReturn="True" TextWrapping="Wrap" MinHeight="70" Height="Auto"/>

                    <Button Content="Update Profile" 
                            Command="{Binding UpdateProfileCommand}" 
                            Style="{StaticResource PrimaryButtonStyle}" 
                            HorizontalAlignment="Left" Margin="0,10,0,0"
                            IsEnabled="{Binding UpdateProfileCommand.CanExecute}"/>
                </StackPanel>
            </GroupBox>

            <GroupBox Header="Security" FontWeight="Medium" FontSize="16" Foreground="#2B6CB0">
                <StackPanel>
                    <Button Content="{Binding IsPasswordChangeVisible, Converter={StaticResource BooleanToStringConverter}, ConverterParameter='Hide Password Section|Change Password'}" 
                            Command="{Binding ShowChangePasswordCommand}" 
                            Style="{StaticResource SecondaryButtonStyle}" 
                            HorizontalAlignment="Left" Margin="0,0,0,20" MinWidth="190"/>

                    <Border Background="#FFFFFF" CornerRadius="5" Padding="20" 
                            BorderThickness="1" BorderBrush="#E2E8F0"
                            Visibility="{Binding IsPasswordChangeVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Margin="0,0,0,0">
                        <StackPanel>
                            <TextBlock Text="Current Password:" Style="{StaticResource LabelStyle}"/>
                            <PasswordBox Style="{StaticResource InputPasswordBoxStyle}"
                                         helpers:PasswordHelper.Password="{Binding CurrentPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <TextBlock Text="New Password:" Style="{StaticResource LabelStyle}"/>
                            <PasswordBox Style="{StaticResource InputPasswordBoxStyle}"
                                         helpers:PasswordHelper.Password="{Binding NewPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <TextBlock Text="Confirm New Password:" Style="{StaticResource LabelStyle}"/>
                            <PasswordBox Style="{StaticResource InputPasswordBoxStyle}"
                                         helpers:PasswordHelper.Password="{Binding ConfirmNewPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Button Content="Save New Password" 
                                    Command="{Binding ChangePasswordCommand}" 
                                    Style="{StaticResource PrimaryButtonStyle}" 
                                    HorizontalAlignment="Left" Margin="0,10,0,0"
                                    IsEnabled="{Binding ChangePasswordCommand.CanExecute}"/>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </GroupBox>

            <TextBlock Text="{Binding Message}" 
                       Style="{StaticResource MessageTextStyle}"
                       Foreground="{Binding Message, Converter={StaticResource MessageToBrushConverter}, FallbackValue=Red}"
                       Visibility="{Binding Message, Converter={StaticResource StringToVisibilityConverter}, FallbackValue=Collapsed}"/>

            <ProgressBar IsIndeterminate="True" Height="3" Margin="0,10,0,0" BorderThickness="0"
                         Visibility="{Binding IsUpdatingProfile, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/>
            <ProgressBar IsIndeterminate="True" Height="3" Margin="0,5,0,0" BorderThickness="0"
                         Visibility="{Binding IsChangingPassword, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/>

        </StackPanel>
    </ScrollViewer>
</UserControl>
