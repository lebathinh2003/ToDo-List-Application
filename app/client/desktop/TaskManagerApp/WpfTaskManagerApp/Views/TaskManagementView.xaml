<UserControl x:Class="WpfTaskManagerApp.Views.TaskManagementView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfTaskManagerApp.Views"
             xmlns:viewModels="clr-namespace:WpfTaskManagerApp.ViewModels"
             xmlns:models="clr-namespace:WpfTaskManagerApp.Models"
             xmlns:core="clr-namespace:WpfTaskManagerApp.Core"
             xmlns:converters="clr-namespace:WpfTaskManagerApp.Converters"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=viewModels:TaskManagementViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="700" d:DesignWidth="1100"
             Background="#F0F4F8">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="Button" x:Key="BaseActionButtonStyle">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Padding" Value="10,6"/>
                <Setter Property="Margin" Value="3"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="MinWidth" Value="80"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="4">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="1" Color="Black" Opacity="0.1" BlurRadius="2"/>
                                </Border.Effect>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Opacity" Value="0.85"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                                    <Setter TargetName="border" Property="Background" Value="#BDC3C7"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="DataGridActionButtonStyle" BasedOn="{StaticResource BaseActionButtonStyle}">
                <Setter Property="Padding" Value="10,5"/>
                <Setter Property="Margin" Value="2,0"/>
                <Setter Property="MinWidth" Value="65"/>
                <Setter Property="Height" Value="28"/>
                <Setter Property="FontSize" Value="11"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
            </Style>

            <Style TargetType="Button" x:Key="EditDataGridButtonStyle" BasedOn="{StaticResource DataGridActionButtonStyle}">
                <Setter Property="Background" Value="#7F8C8D"/>
            </Style>
            <Style TargetType="Button" x:Key="DeleteDataGridButtonStyle" BasedOn="{StaticResource DataGridActionButtonStyle}">
                <Setter Property="Background" Value="#C0392B"/>
            </Style>
            <Style TargetType="Button" x:Key="RestoreDataGridButtonStyle" BasedOn="{StaticResource DataGridActionButtonStyle}">
                <Setter Property="Background" Value="#27AE60"/>
            </Style>

            <Style TargetType="Button" x:Key="PanelActionButtonStyle" BasedOn="{StaticResource BaseActionButtonStyle}">
                <Setter Property="Padding" Value="12,7"/>
                <Setter Property="MinWidth" Value="90"/>
                <Setter Property="Height" Value="34"/>
                <Setter Property="FontSize" Value="13"/>
            </Style>
            <Style TargetType="Button" x:Key="PrimaryPanelActionButtonStyle" BasedOn="{StaticResource PanelActionButtonStyle}">
                <Setter Property="Background" Value="#3498DB"/>
            </Style>
            <Style TargetType="Button" x:Key="SecondaryPanelActionButtonStyle" BasedOn="{StaticResource PanelActionButtonStyle}">
                <Setter Property="Background" Value="#95A5A6"/>
            </Style>


            <Style TargetType="TextBox" x:Key="SearchTextBoxStyle">
                <Setter Property="Padding" Value="10,7"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#BDC3C7"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="MinWidth" Value="200"/>
                <Setter Property="Height" Value="34"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border x:Name="border" Background="White"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#7F8C8D"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#3498DB"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ComboBox" x:Key="StyledComboBoxStyle">
                <Setter Property="Padding" Value="10,0"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#BDC3C7"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="MinWidth" Value="120"/>
                <Setter Property="Height" Value="34"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <ToggleButton x:Name="ToggleButton" 
                                              Focusable="false"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press"
                                              Background="{TemplateBinding Background}"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border x:Name="templateRoot" 
                                                    Background="{Binding Background, RelativeSource={RelativeSource AncestorType=ComboBox}}" 
                                                    BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=ComboBox}}" 
                                                    BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=ComboBox}}" 
                                                    CornerRadius="4">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <ContentPresenter Grid.Column="0" 
                                                                      Content="{Binding SelectionBoxItem, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                                      ContentTemplate="{Binding SelectionBoxItemTemplate, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                                      HorizontalAlignment="Left" VerticalAlignment="Center"
                                                                      Margin="10,0,0,0"/>
                                                    <Path Grid.Column="1" x:Name="Arrow" Data="M 0 0 L 4 4 L 8 0 Z" Fill="#555" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="#7F8C8D"/>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="#3498DB"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <Popup Name="PART_Popup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="Slide" Placement="Bottom">
                                    <Border Name="DropDownBorder" Background="White" BorderThickness="1" BorderBrush="#BDC3C7" CornerRadius="4" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}">
                                        <Border.Effect>
                                            <DropShadowEffect ShadowDepth="1" Color="Black" Opacity="0.1" BlurRadius="5"/>
                                        </Border.Effect>
                                        <ScrollViewer CanContentScroll="true">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="DataGrid">
                <Setter Property="AutoGenerateColumns" Value="False"/>
                <Setter Property="CanUserAddRows" Value="False"/>
                <Setter Property="CanUserDeleteRows" Value="False"/>
                <Setter Property="IsReadOnly" Value="True"/>
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="GridLinesVisibility" Value="None"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#DDE4E8"/>
                <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="RowHeaderWidth" Value="0"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="RowHeight" Value="42"/>
                <Setter Property="ColumnHeaderHeight" Value="40"/>
                <Setter Property="AlternatingRowBackground" Value="#F8F9FA"/>
                <Setter Property="RowStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridRow">
                            <Setter Property="BorderBrush" Value="#E9ECEF"/>
                            <Setter Property="BorderThickness" Value="0,0,0,1"/>
                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#EBF5FB"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#D6EAF8"/>
                                    <Setter Property="Foreground" Value="#1A5276"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="DataGridColumnHeader">
                <Setter Property="Background" Value="#F1F3F5"/>
                <Setter Property="Foreground" Value="#343A40"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Padding" Value="12,10"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="BorderThickness" Value="0,0,1,1"/>
                <Setter Property="BorderBrush" Value="#DEE2E6"/>
            </Style>

            <Style TargetType="DataGridCell">
                <Setter Property="Padding" Value="12,8"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridCell">
                            <Border Padding="{TemplateBinding Padding}" 
                                    Background="{TemplateBinding Background}">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Text="Task Management" FontSize="28" FontWeight="Bold" Margin="0,0,0,25" Foreground="#111827"/>

        <Border Grid.Row="1" Background="White" Padding="15" CornerRadius="8" Margin="0,0,0,20">
            <Border.Effect>
                <DropShadowEffect ShadowDepth="2" Color="#000000" Opacity="0.08" BlurRadius="10" Direction="270"/>
            </Border.Effect>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock Text="Search:" VerticalAlignment="Center" Margin="0,0,8,0" Foreground="#4B5563" FontWeight="Medium"/>
                    <TextBox Text="{Binding SearchTerm, UpdateSourceTrigger=PropertyChanged}" 
                             Style="{StaticResource SearchTextBoxStyle}" KeyDown="SearchTextBox_KeyDown"
                             Width="200"/>
                </StackPanel>

                <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" Margin="20,0,0,0">
                    <TextBlock Text="Status:" VerticalAlignment="Center" Margin="0,0,8,0" Foreground="#4B5563" FontWeight="Medium"/>
                    <ComboBox ItemsSource="{Binding AllTaskStatusesWithOptionalNone}" 
                              SelectedItem="{Binding SelectedFilterStatus, Mode=TwoWay}"
                              Style="{StaticResource StyledComboBoxStyle}"
                              MinWidth="130">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource TaskStatusToStringConverter}, ConverterParameter=All}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>

                <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center" Margin="20,0,0,0">
                    <TextBlock Text="Sort By:" VerticalAlignment="Center" Margin="0,0,8,0" Foreground="#4B5563" FontWeight="Medium"/>
                    <ComboBox ItemsSource="{Binding SortableTaskProperties}" 
                              SelectedItem="{Binding SortBy, Mode=TwoWay}"
                              Style="{StaticResource StyledComboBoxStyle}"
                              MinWidth="140"/>
                </StackPanel>

                <StackPanel Grid.Column="3" Orientation="Horizontal" VerticalAlignment="Center" Margin="15,0,0,0">
                    <TextBlock Text="Order:" VerticalAlignment="Center" Margin="0,0,8,0" Foreground="#4B5563" FontWeight="Medium"/>
                    <ComboBox ItemsSource="{Binding SortOrders}" 
                              SelectedItem="{Binding SortOrder, Mode=TwoWay}"
                              Style="{StaticResource StyledComboBoxStyle}"
                              MinWidth="90"/>
                </StackPanel>

                <Button Grid.Column="5" Content="Add New Task" 
                        Command="{Binding AddTaskCommand}" 
                        Style="{StaticResource PrimaryPanelActionButtonStyle}"
                        Visibility="{Binding CanAdminManageTasks, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </Grid>
        </Border>

        <DataGrid Grid.Row="2" 
                  ItemsSource="{Binding Tasks}" 
                  SelectedItem="{Binding SelectedTask, Mode=TwoWay}"
                  CanUserSortColumns="False"  
                  HeadersVisibility="Column">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Title" Binding="{Binding Title}" Width="2*" IsReadOnly="True"/>
                <DataGridTextColumn Header="Description" Binding="{Binding Description, TargetNullValue='-'}" Width="3*" IsReadOnly="True" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="NoWrap"/>
                            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                            <Setter Property="ToolTip" Value="{Binding Description}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Assignee" Binding="{Binding AssigneeName, FallbackValue='N/A', TargetNullValue='Unassigned'}" Width="1.5*" IsReadOnly="True"/>
                <DataGridTextColumn Header="Due Date" Binding="{Binding DueDate, StringFormat='dd/MM/yyyy', TargetNullValue='-'}" Width="120" IsReadOnly="True"/>

                <DataGridTemplateColumn Header="Status" Width="110" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Border Padding="8,6" CornerRadius="12" HorizontalAlignment="Center" VerticalAlignment="Center" MinWidth="70"
                                    Background="{Binding Status, Converter={StaticResource TaskStatusToStringConverter}}">
                                <TextBlock Text="{Binding Status}" 
                                           Foreground="White" FontWeight="SemiBold" FontSize="11" TextAlignment="Center"/>
                            </Border>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Actions" Width="Auto" MinWidth="180">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <!-- Edit Button -->
                                <Button Content="Edit" 
                        Command="{Binding DataContext.EditTaskCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                        CommandParameter="{Binding}"
                        Style="{StaticResource EditDataGridButtonStyle}" />

                                <!-- Delete Button (Corrected) -->
                                <Button Content="Delete" 
                        Command="{Binding DataContext.DeleteTaskCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                        CommandParameter="{Binding}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource DeleteDataGridButtonStyle}">
                                            <Setter Property="Visibility" 
                                    Value="{Binding DataContext.CanAdminManageTasks, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsActive}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <!-- Restore Button (Corrected) -->
                                <Button Content="Restore" 
                        Command="{Binding DataContext.RestoreTaskCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                        CommandParameter="{Binding}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource RestoreDataGridButtonStyle}">
                                            <Setter Property="Visibility" 
                                    Value="{Binding DataContext.CanAdminManageTasks, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <Border Grid.Row="3" Background="White" Padding="12" CornerRadius="8" Margin="0,15,0,0">
            <Border.Effect>
                <DropShadowEffect ShadowDepth="1" Color="#000000" Opacity="0.08" BlurRadius="8"/>
            </Border.Effect>
            <DockPanel>
                <TextBlock DockPanel.Dock="Left" Text="{Binding TotalItems, StringFormat='Total Tasks: {0}'}" VerticalAlignment="Center" Margin="10,0,0,0" Foreground="#4B5563" FontWeight="Medium"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Content="&lt;&lt; First" Command="{Binding FirstPageCommand}" Style="{StaticResource SecondaryPanelActionButtonStyle}" IsEnabled="{Binding CanGoToPreviousPage}" Padding="10,5"/>
                    <Button Content="&lt; Previous" Command="{Binding PreviousPageCommand}" Style="{StaticResource SecondaryPanelActionButtonStyle}" IsEnabled="{Binding CanGoToPreviousPage}" Padding="10,5"/>
                    <TextBlock VerticalAlignment="Center" Margin="10,0" Foreground="#4B5563" FontWeight="Medium"> <Run Text="Page"/> <Run Text="{Binding CurrentPageDisplay, FallbackValue=1, Mode=OneWay}"/> <Run Text="of"/> <Run Text="{Binding TotalPagesDisplay, FallbackValue=1, Mode=OneWay}"/></TextBlock>
                    <Button Content="Next &gt;" Command="{Binding NextPageCommand}" Style="{StaticResource SecondaryPanelActionButtonStyle}" IsEnabled="{Binding CanGoToNextPage}" Padding="10,5"/>
                    <Button Content="Last &gt;&gt;" Command="{Binding LastPageCommand}" Style="{StaticResource SecondaryPanelActionButtonStyle}" IsEnabled="{Binding CanGoToNextPage}" Padding="10,5"/>
                </StackPanel>
            </DockPanel>
        </Border>

        <ProgressBar Grid.Row="1" Grid.RowSpan="3" IsIndeterminate="True" Height="4" VerticalAlignment="Top" Margin="0,5,0,0" Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" Panel.ZIndex="1"/>

    </Grid>
</UserControl>
