<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:core="clr-namespace:WpfTaskManagerApp.Core">
    <Style TargetType="Button" x:Key="BaseActionButtonStyle">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,6"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="4">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="1" Color="Black" Opacity="0.1" BlurRadius="2"/>
                        </Border.Effect>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.85"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                            <Setter TargetName="border" Property="Background" Value="#BDC3C7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="SharedDataGridActionButtonPropertiesStyle">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Margin" Value="2,0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinWidth" Value="65"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="TextBox" x:Key="BaseSearchTextBoxStyle">
        <Setter Property="Padding" Value="10,7"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#BDC3C7"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="34"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" Background="White"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#7F8C8D"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#3498DB"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox" x:Key="StyledComboBoxStyle">
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#BDC3C7"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="90"/>
        <Setter Property="Height" Value="34"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                                      Focusable="false"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border x:Name="templateRoot"
                                            Background="{Binding Background, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                            BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                            BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                            CornerRadius="4">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter Grid.Column="0"
                                                              x:Name="ContentSite"
                                                              Content="{Binding SelectionBoxItem, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                              ContentTemplate="{Binding SelectionBoxItemTemplate, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                              ContentTemplateSelector="{Binding ItemTemplateSelector, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                              HorizontalAlignment="Left" VerticalAlignment="Center"
                                                              Margin="10,0,0,0"/>
                                            <Path Grid.Column="1" x:Name="Arrow" Data="M 0 0 L 4 4 L 8 0 Z" Fill="#555" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="#7F8C8D"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="#3498DB"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <Popup Name="PART_Popup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="Slide" Placement="Bottom">
                            <Border Name="DropDownBorder" Background="White" BorderThickness="1" BorderBrush="#BDC3C7" CornerRadius="4" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="1" Color="Black" Opacity="0.1" BlurRadius="5"/>
                                </Border.Effect>
                                <ScrollViewer CanContentScroll="true">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="PanelActionButtonStyle" BasedOn="{StaticResource BaseActionButtonStyle}">
        <Setter Property="Padding" Value="12,7"/>
        <Setter Property="MinWidth" Value="90"/>
        <Setter Property="Height" Value="34"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>

    <Style TargetType="Button" x:Key="PrimaryPanelActionButtonStyle" BasedOn="{StaticResource PanelActionButtonStyle}">
        <Setter Property="Background" Value="#3498DB"/>
    </Style>

    <Style TargetType="Button" x:Key="SecondaryPanelActionButtonStyle" BasedOn="{StaticResource PanelActionButtonStyle}">
        <Setter Property="Background" Value="#95A5A6"/>
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#DDE4E8"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="RowHeight" Value="42"/>
        <Setter Property="ColumnHeaderHeight" Value="40"/>
        <Setter Property="AlternatingRowBackground" Value="#F8F9FA"/>
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Setter Property="BorderBrush" Value="#E9ECEF"/>
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#EBF5FB"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#D6EAF8"/>
                            <Setter Property="Foreground" Value="#1A5276"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="#F1F3F5"/>
        <Setter Property="Foreground" Value="#343A40"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="12,10"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="BorderBrush" Value="#DEE2E6"/>
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PageTitleTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0,0,0,25"/>
        <Setter Property="Foreground" Value="#111827"/>
    </Style>

    <Style x:Key="FilterPanelBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Padding" Value="15"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Margin" Value="0,0,0,20"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="2" Color="#000000" Opacity="0.08" BlurRadius="10" Direction="270"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LoadingProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Grid.Row" Value="1"/>
        <Setter Property="Grid.RowSpan" Value="3"/>
        <Setter Property="IsIndeterminate" Value="True"/>
        <Setter Property="Height" Value="4"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="0,5,0,0"/>
        <Setter Property="Panel.ZIndex" Value="1"/>
    </Style>

    <Style x:Key="PaginationControlsStyle" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border Background="White" Padding="12" CornerRadius="8" Margin="0,15,0,0">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="1" Color="#000000" Opacity="0.08" BlurRadius="8"/>
                        </Border.Effect>
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Left"
                                       Text="{Binding Path=(core:PaginationAttachedProperties.TotalItemsText), RelativeSource={RelativeSource TemplatedParent}, FallbackValue='Total Items: 0'}"
                                       VerticalAlignment="Center" Margin="10,0,0,0" Foreground="#4B5563" FontWeight="Medium"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <Button Content="&lt;&lt; First"
                                        Command="{Binding Path=(core:PaginationAttachedProperties.FirstPageCommand), RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource SecondaryPanelActionButtonStyle}"
                                        IsEnabled="{Binding Path=(core:PaginationAttachedProperties.CanGoToPreviousPage), RelativeSource={RelativeSource TemplatedParent}}"
                                        Padding="10,5"/>
                                <Button Content="&lt; Previous"
                                        Command="{Binding Path=(core:PaginationAttachedProperties.PreviousPageCommand), RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource SecondaryPanelActionButtonStyle}"
                                        IsEnabled="{Binding Path=(core:PaginationAttachedProperties.CanGoToPreviousPage), RelativeSource={RelativeSource TemplatedParent}}"
                                        Padding="10,5"/>
                                <TextBlock VerticalAlignment="Center" Margin="10,0" Foreground="#4B5563" FontWeight="Medium">
                                    <Run Text="Page"/>
                                    <Run Text="{Binding Path=(core:PaginationAttachedProperties.CurrentPageDisplay), RelativeSource={RelativeSource TemplatedParent}, FallbackValue=1}"/>
                                    <Run Text="of"/>
                                    <Run Text="{Binding Path=(core:PaginationAttachedProperties.TotalPagesDisplay), RelativeSource={RelativeSource TemplatedParent}, FallbackValue=1}"/>
                                </TextBlock>
                                <Button Content="Next &gt;"
                                        Command="{Binding Path=(core:PaginationAttachedProperties.NextPageCommand), RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource SecondaryPanelActionButtonStyle}"
                                        IsEnabled="{Binding Path=(core:PaginationAttachedProperties.CanGoToNextPage), RelativeSource={RelativeSource TemplatedParent}}"
                                        Padding="10,5"/>
                                <Button Content="Last &gt;&gt;"
                                        Command="{Binding Path=(core:PaginationAttachedProperties.LastPageCommand), RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource SecondaryPanelActionButtonStyle}"
                                        IsEnabled="{Binding Path=(core:PaginationAttachedProperties.CanGoToNextPage), RelativeSource={RelativeSource TemplatedParent}}"
                                        Padding="10,5"/>
                            </StackPanel>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="SharedValidationErrorTemplate">
        <StackPanel>
            <AdornedElementPlaceholder x:Name="controlWithError"/>
            <TextBlock Text="{Binding ElementName=controlWithError, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                       Foreground="#E53935" FontSize="11" Margin="0,2,0,0"/>
        </StackPanel>
    </ControlTemplate>

    <Style TargetType="TextBlock" x:Key="DialogTitleHeaderStyle">
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="#1F2937"/>
        <Setter Property="Margin" Value="0,0,0,20"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="DialogLabelStyle">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Margin" Value="0,0,0,6"/>
        <Setter Property="Foreground" Value="#4B5563"/>
        <Setter Property="FontWeight" Value="Medium"/>
    </Style>

    <Style x:Key="BaseDialogInputStyle">
        <Setter Property="Control.FontSize" Value="14"/>
        <Setter Property="Control.Padding" Value="10,8"/>
        <Setter Property="Control.BorderThickness" Value="1"/>
        <Setter Property="Control.BorderBrush" Value="#D1D5DB"/>
        <Setter Property="Control.Margin" Value="0,0,0,8"/>
        <Setter Property="Control.Background" Value="White"/>
        <Setter Property="Control.Height" Value="38"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="TextBox" x:Key="DialogInputTextBoxStyle" BasedOn="{StaticResource BaseDialogInputStyle}">
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource SharedValidationErrorTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#A0AEC0"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#3B82F6"/>
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="#3B82F6" Opacity="0.2" BlurRadius="4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#EF4444"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="1.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="PasswordBox" x:Key="DialogInputPasswordBoxStyle" BasedOn="{StaticResource BaseDialogInputStyle}">
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource SharedValidationErrorTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border x:Name="border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#A0AEC0"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#3B82F6"/>
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="#3B82F6" Opacity="0.2" BlurRadius="4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#EF4444"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="1.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox" x:Key="DialogComboBoxStyle" BasedOn="{StaticResource BaseDialogInputStyle}">
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource SharedValidationErrorTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid x:Name="templateRootGrid">
                        <ToggleButton x:Name="ToggleButton"
                                      Focusable="false"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Padding="0">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border x:Name="templateRootBorder" Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="4">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Path Grid.Column="1" x:Name="Arrow" Data="M 0 0 L 4 4 L 8 0 Z" Fill="#555" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="templateRootBorder" Property="BorderBrush" Value="#A0AEC0"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="templateRootBorder" Property="BorderBrush" Value="#3B82F6"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=(Validation.HasError)}" Value="True">
                                            <Setter TargetName="templateRootBorder" Property="BorderBrush" Value="#EF4444"/>
                                            <Setter TargetName="templateRootBorder" Property="BorderThickness" Value="1.5"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>

                        <ContentPresenter x:Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Visibility="Collapsed"/>

                        <TextBox x:Name="PART_EditableTextBox"
                                 Style="{x:Null}"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Center"
                                 Margin="{TemplateBinding Padding}"
                                 Focusable="True"
                                 Background="Transparent"
                                 BorderThickness="0" IsHitTestVisible="True"
                                 Visibility="Collapsed"
                                 Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

                        <Popup Name="PART_Popup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="Slide" Placement="Bottom">
                            <Border Name="DropDownBorder" Background="White" BorderThickness="1" BorderBrush="#D1D5DB" CornerRadius="4" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="1" Color="Black" Opacity="0.1" BlurRadius="5"/>
                                </Border.Effect>
                                <ScrollViewer CanContentScroll="true">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_EditableTextBox" Property="IsHitTestVisible" Value="True" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="false">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_EditableTextBox" Property="IsHitTestVisible" Value="False" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="#EF4444"/>
                            <Setter Property="BorderThickness" Value="1.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DatePicker" x:Key="DialogDatePickerStyle" BasedOn="{StaticResource BaseDialogInputStyle}">
    </Style>

    <Style TargetType="CheckBox" x:Key="DialogCheckBoxStyle">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#334155"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,5,0,15"/>
    </Style>

    <Style TargetType="Button" x:Key="DialogPrimaryButtonStyle">
        <Setter Property="Background" Value="#3B82F6"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="20,10"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="38"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="4">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="1" Color="#2563EB" Opacity="0.3" BlurRadius="5"/>
                        </Border.Effect>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#2563EB"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.65"/>
                            <Setter TargetName="border" Property="Background" Value="#9CA3AF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="DialogSecondaryButtonStyle" BasedOn="{StaticResource DialogPrimaryButtonStyle}">
        <Setter Property="Background" Value="#E5E7EB"/>
        <Setter Property="Foreground" Value="#374151"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="1" Color="Gray" Opacity="0.2" BlurRadius="3"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#D1D5DB"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>