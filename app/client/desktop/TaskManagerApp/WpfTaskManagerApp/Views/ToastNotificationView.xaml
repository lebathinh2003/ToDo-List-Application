<UserControl x:Class="WpfTaskManagerApp.Views.ToastNotificationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfTaskManagerApp.Views"
             xmlns:viewModels="clr-namespace:WpfTaskManagerApp.ViewModels" 
             xmlns:core="clr-namespace:WpfTaskManagerApp.Core"
             xmlns:converters="clr-namespace:WpfTaskManagerApp.Converters"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=viewModels:ToastNotificationViewModel, IsDesignTimeCreatable=True}"
             Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
             HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,20,20,0" MaxWidth="380" MinWidth="300"
             d:DesignHeight="80">
    <UserControl.Resources>
        <Style TargetType="Border" x:Key="ToastBorderStyle">
            <Setter Property="Padding" Value="15,12"/>
            <Setter Property="CornerRadius" Value="6"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="2" Color="Black" Opacity="0.2" BlurRadius="8"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ToastType}" Value="{x:Static core:ToastType.Success}">
                    <Setter Property="Background" Value="#E6FFFA"/>
                    <Setter Property="BorderBrush" Value="#B2F5EA"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ToastType}" Value="{x:Static core:ToastType.Error}">
                    <Setter Property="Background" Value="#FFF5F5"/>
                    <Setter Property="BorderBrush" Value="#FED7D7"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ToastType}" Value="{x:Static core:ToastType.Warning}">
                    <Setter Property="Background" Value="#FFFAF0"/>
                    <Setter Property="BorderBrush" Value="#FEEBC8"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ToastType}" Value="{x:Static core:ToastType.Information}">
                    <Setter Property="Background" Value="#EBF8FF"/>
                    <Setter Property="BorderBrush" Value="#BEE3F8"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBlock" x:Key="ToastMessageStyle">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ToastType}" Value="{x:Static core:ToastType.Success}">
                    <Setter Property="Foreground" Value="#2F855A"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ToastType}" Value="{x:Static core:ToastType.Error}">
                    <Setter Property="Foreground" Value="#C53030"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ToastType}" Value="{x:Static core:ToastType.Warning}">
                    <Setter Property="Foreground" Value="#B45309"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ToastType}" Value="{x:Static core:ToastType.Information}">
                    <Setter Property="Foreground" Value="#2B6CB0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="CloseToastButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="24"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Margin" Value="-12,-10,0,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Content" Value="✕"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="Transparent">
                            <Ellipse x:Name="backgroundCircle" Fill="#00000000" Opacity="0.2" Width="20" Height="20" Visibility="Collapsed"/>
                            <TextBlock Text="{TemplateBinding Content}" 
                                       Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                                       HorizontalAlignment="Center" VerticalAlignment="Center"
                                       FontSize="12" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="backgroundCircle" Property="Visibility" Value="Visible"/>
                                <Setter Property="Opacity" Value="0.8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ToastType}" Value="{x:Static core:ToastType.Success}">
                    <Setter Property="Foreground" Value="#2F855A"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ToastType}" Value="{x:Static core:ToastType.Error}">
                    <Setter Property="Foreground" Value="#C53030"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ToastType}" Value="{x:Static core:ToastType.Warning}">
                    <Setter Property="Foreground" Value="#B45309"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ToastType}" Value="{x:Static core:ToastType.Information}">
                    <Setter Property="Foreground" Value="#2B6CB0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <Border Style="{StaticResource ToastBorderStyle}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="{Binding Message}" Style="{StaticResource ToastMessageStyle}"/>
            <Button Grid.Column="1" Command="{Binding HideCommand}" Style="{StaticResource CloseToastButtonStyle}"
                    ToolTip="Close"/>
        </Grid>
    </Border>
</UserControl>
